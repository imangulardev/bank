{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-register></app-register>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bank';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { FormsModule }    from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent\n  ],\n  imports: [\n    BrowserModule,FormsModule,ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"h1{\\n    height: 50px;\\n    background-color: tomato;\\n    color: burlywood;\\n    margin: auto;\\n    text-align: center;\\n   \\n}\\n\\n.heading-two{\\n    height: 50px;\\n    background-color: rgb(109, 27, 13);\\n    color: burlywood;\\n    margin: auto;\\n   \\n}\\n\\n.wraper-inside{\\n    margin-top: -18px;\\n    text-align: center;\\n}\\n\\n.wraper-main{\\n    width: 50%;\\n    background-color: beige;\\n    /* margin: auto; */\\n    /* text-align: center; */\\n    /* max-height: 70%; */\\n    /* display: inline-block; */\\n}\\n\\n.wraper-in-inside{\\n    margin-top: -20px\\n}\\n\\ninput[type=number] {\\n    width: 100%;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n}\\n\\ninput[type=text ] {\\n    width: 100%;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n}\\n\\ninput[type=email ] {\\n    width: 100%;\\n    padding: 12px 20px;\\n    margin: 8px 0;\\n    display: inline-block;\\n    border: 1px solid #ccc;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n}\\n\\nbutton[type=button] {\\n    width: 100%;\\n    background-color: #4CAF50;\\n    color: white;\\n    padding: 14px 20px;\\n    margin: 8px 0;\\n    border: none;\\n    border-radius: 4px;\\n    cursor: pointer;\\n}\\n\\nbutton[type=submit]:hover {\\n    background-color: #45a049;\\n}\\n\\ndiv {\\n    border-radius: 50px;\\n    background-color: #f2f2f2;\\n    padding: 20px;\\n}\\n\\n.second-main-wraper{\\n    width: 50%;\\n    width: 43%;\\n    background-color: beige;\\n    height: 70%;\\n    position: absolute;\\n    right: 0px;\\n    top: 52px;\\n\\n}\\n\\n.tranc{\\n    width: 100%;\\n    background-color: darkorange;\\n    color: black;\\n    text-align: center;\\n    font-size: 35px;\\n}\\n\\n.heading-two{\\n    text-align: center;\\n}\"","module.exports = \"<h1>Banking Management System</h1>\\n<div class= \\\"wraper-main\\\">\\n  <div class = \\\"wraper-inside\\\">\\n    <h2 class=\\\"heading-two\\\">Open your Bank Account</h2>\\n  </div>\\n  <div class= \\\"wraper-in-inside\\\">\\n         \\n              <form  name=\\\"itemForm\\\">\\n                  <label for=\\\"anumber\\\">Account Number</label>\\n                  <input type=\\\"number\\\" id=\\\"anumber\\\" name=\\\"AccountNumber\\\" placeholder=\\\"Your account number..\\\" [(ngModel)]=\\\"newItem.anumber\\\">\\n              \\n                  <label for=\\\"fname\\\">First Name</label>\\n                  <input type=\\\"text\\\" id=\\\"fname\\\" name=\\\"firstname\\\" placeholder=\\\"Your name..\\\" [(ngModel)]=\\\"newItem.fname\\\"> \\n            \\n                  <label for=\\\"lname\\\">Last Name</label>\\n                  <input type=\\\"text\\\" id=\\\"lname\\\" name=\\\"lastname\\\" placeholder=\\\"Your last name..\\\" [(ngModel)]=\\\"newItem.lname\\\">\\n\\n                  <label for=\\\"email\\\">Email</label>\\n                  <input type=\\\"email\\\" id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Enter email here!!!\\\" [(ngModel)]=\\\"newItem.email\\\" required>\\n                  <label for=\\\"city\\\">City</label>\\n                 <input type=\\\"text\\\" name=\\\"city\\\" id=\\\"city\\\" [(ngModel)]=\\\"newItem.city\\\" placeholder=\\\"Enter your city\\\">\\n              \\n                  <label for=\\\"gender\\\">Gender</label><br>\\n                  <input type=\\\"radio\\\" class=\\\"male\\\" value=\\\"male\\\" name=\\\"gender\\\" id=\\\"sex\\\" [(ngModel)]=\\\"newItem.sex\\\">Male\\n                  <input type=\\\"radio\\\" class=\\\"female\\\" value=\\\"female\\\" name=\\\"gender\\\" id=\\\"sex\\\" [(ngModel)]=\\\"newItem.sex\\\">Female\\n                  <br>\\n    <!-- Add button to add record -->\\n    <button type=\\\"button\\\" (click)=\\\"AddItem()\\\" class=\\\"btn btn-default\\\">Add</button>\\n\\n              </form>\\n           \\n\\n</div>\\n\\n</div>\\n<div class=\\\"second-main-wraper\\\">\\n    <h2 class=\\\"heading-two\\\">Account Details</h2>\\n    <div class=\\\"panel-body\\\">\\n        \\n        <div *ngFor=\\\"let data of myItems;let i= index\\\">\\n           <span class=\\\"exchange-alt\\\"></span>\\n           <b><i>Account Number is:~  </i></b>{{data.anumber}} <br><b><i>Account holder's first name is:~  </i></b>{{data.fname}} <br> <b><i>Account holder's last name is:~  </i></b>{{data.lname}} <br><b><i>Account holder's email is:~  </i></b>{{data.email}} <br><b><i>He/She is from:~  </i></b>{{data.city}} <br><b><i>Gender is:~  </i></b>{{data.sex}}\\n              <br>\\n              <div >\\n              <button class=\\\"tranc\\\" (click)=\\\"toggle()\\\" >  Transacation's <i class=\\\"fa fa-rupee\\\"></i>\\n              </button>\\n              <table *ngIf=\\\"show\\\"> \\n                <thead>\\n                  <tr>\\n                    <th>Amount Number</th>\\n                    <th>Balance</th>\\n                  </tr>\\n                  <tr>\\n                    <th>{{data.anumber}}</th>\\n                    <th>{{balance}}</th>\\n                  </tr>\\n                </thead>\\n                 \\n                <button class=\\\"tranc\\\" > Fund Transfer <i class=\\\"fa fa-rupee\\\"></i></button>\\n                  <table>\\n                    <thead>\\n                      <tr>\\n                        <th>\\n                          <label for=\\\"Amount\\\">Amount</label>\\n                          <input type=\\\"number\\\"><br>\\n                          <label for=\\\"Select Account Number\\\">Select Account Number</label>\\n                          <select>\\n                          <option *ngFor=\\\"let data of myItems \\\">{{data.anumber}}</option>\\n                          </select>\\n                        </th>\\n                      </tr>\\n                    </thead>\\n                  </table>\\n              \\n              </table>\\n              \\n            </div>\\n        </div>\\n        <div *ngIf=\\\"myItems.length == 0\\\" >\\n          Items Are Empty !!!\\n        </div>\\n      </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nexport class MyItems {\n  Value: string;\n  constructor(Value:string)\n  {\n    this.Value = Value;\n  }\n}\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  \n  balance : number= 1000;\n  public show:boolean = false;\n  public buttonName:any = 'Show';\n  \n  myItems: MyItems[] = new Array()\n  \n  newItem: any = {};\n\n  constructor( private formBuilder: FormBuilder ) { }\n \n  ngOnInit() {\n \n  }\n    \n\n \n  AddItem() {\n    this.myItems.push(\n      this.newItem\n    );\n    this.newItem = {};\n  }\n\n\n\n\n\ntoggle() {\n  this.show = !this.show;\n\n  // CHANGE THE NAME OF THE BUTTON.\n  if(this.show)  \n    this.buttonName = \"Hide\";\n  else\n    this.buttonName = \"Show\";\n}\n}\n\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}